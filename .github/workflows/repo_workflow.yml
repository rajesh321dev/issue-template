name: 🛠️ Create JFrog Repo from Issue

on:
  issues:
    types: [opened]

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  create-jfrog-repo:
    if: github.event.issue.title == 'Create JFrog Repo'
    runs-on: ubuntu-latest

    env:
      JF_URL: https://trial174qib.jfrog.io
      PROVIDER_NAME: github-jfrog

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set Debug Mode
        run: echo "JFROG_CLI_LOG_LEVEL=DEBUG" >> $GITHUB_ENV

      - name: Install JFrog CLI
        run: curl -fL https://install-cli.jfrog.io | sh

      - name: Setup JFrog CLI with OIDC
        uses: jfrog/setup-jfrog-cli@v4
        with:
          oidc-provider-name: ${{ env.PROVIDER_NAME }}
          jfrog-url: ${{ env.JF_URL }}

      - name: Extract Repository Info from Issue Body
        id: extract
        run: |
          ISSUE_BODY=$(jq -r .issue.body "$GITHUB_EVENT_PATH")
          
          REPO_NAME=$(echo "$ISSUE_BODY" | grep -A1 "Repository Name" | tail -n1 | xargs)
          REPO_TYPE=$(echo "$ISSUE_BODY" | grep -A1 "Repository Type" | tail -n1 | xargs)
          REPO_VISIBILITY=$(echo "$ISSUE_BODY" | grep -A1 "Repository Visibility" | tail -n1 | xargs)

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "REPO_TYPE=$REPO_TYPE" >> $GITHUB_ENV
          echo "REPO_VISIBILITY=$REPO_VISIBILITY" >> $GITHUB_ENV

      - name: Create Repository in JFrog
        run: |
          echo "Creating $REPO_VISIBILITY repository: $REPO_NAME ($REPO_TYPE)"

          if [ "$REPO_VISIBILITY" = "Pre-Built Setup" ]; then
            echo "Pre-Built Setup selected. No repo will be created."
            exit 0
          fi

          # lowercase rclass for JFrog API
          RCLASS=$(echo "$REPO_VISIBILITY" | tr '[:upper:]' '[:lower:]')

          jf rt curl -XPOST /artifactory/api/repositories -H "Content-Type: application/json" -d @- <<EOF
          {
            "key": "$REPO_NAME",
            "rclass": "$RCLASS",
            "packageType": "$REPO_TYPE",
            "description": "Repository created via GitHub Issue"
          }
          EOF

      - name: Comment on Issue
        run: |
          gh issue comment ${{ github.event.issue.number }} \
            --body "✅ JFrog repository **$REPO_NAME** of type **$REPO_TYPE** and class **$REPO_VISIBILITY** was created successfully!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
